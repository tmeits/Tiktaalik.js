(* 
 * Sorting: QuickSort 
 * This example is a part of Prof. Nikalus Wirth's book
 * www.zonnon.ethz.ch/usergroup
 * (c) ETH Zurich
 *)

module Sorts;
    
    type  ElementOfArray = integer;
    
    (***** Implementation *****)
    
    procedure {public} QuickSort(var a: array * of ElementOfArray; L, R: integer);
    var i,j: integer; w,x: ElementOfArray;
    begin i := L; j := R;
       x := a[(L + R) div 2];
       repeat
          while a[i] < x do i := i + 1; end;
          while x < a[j] do j := j - 1; end;
          if i <= j then
             w := a[i]; a[i] := a[j]; a[j] := w; i := i + 1; j := j - 1;
          end;
       until i > j;
       if L < j then QuickSort(a, L, j) end;
       if i < R then QuickSort(a, i, R) end;
    end QuickSort;

begin
end Sorts.
(*
 ~/Загрузки/ch.ethz.zonnon_1.3.0/compiler/zc.exe /file:sorts.znn
 *)